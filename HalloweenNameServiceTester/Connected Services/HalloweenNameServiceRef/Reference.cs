//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HalloweenNameServiceTester.HalloweenNameServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Name", Namespace="http://schemas.datacontract.org/2004/07/HalloweenName")]
    [System.SerializableAttribute()]
    public partial class Name : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="HalloweenNameServiceRef.IHalloweenService")]
    public interface IHalloweenService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHalloweenService/GetRandomName", ReplyAction="http://tempuri.org/IHalloweenService/GetRandomNameResponse")]
        HalloweenNameServiceTester.HalloweenNameServiceRef.Name GetRandomName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHalloweenService/GetRandomName", ReplyAction="http://tempuri.org/IHalloweenService/GetRandomNameResponse")]
        System.Threading.Tasks.Task<HalloweenNameServiceTester.HalloweenNameServiceRef.Name> GetRandomNameAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHalloweenService/GetRandomNames", ReplyAction="http://tempuri.org/IHalloweenService/GetRandomNamesResponse")]
        HalloweenNameServiceTester.HalloweenNameServiceRef.Name[] GetRandomNames(int count);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHalloweenService/GetRandomNames", ReplyAction="http://tempuri.org/IHalloweenService/GetRandomNamesResponse")]
        System.Threading.Tasks.Task<HalloweenNameServiceTester.HalloweenNameServiceRef.Name[]> GetRandomNamesAsync(int count);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IHalloweenServiceChannel : HalloweenNameServiceTester.HalloweenNameServiceRef.IHalloweenService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HalloweenServiceClient : System.ServiceModel.ClientBase<HalloweenNameServiceTester.HalloweenNameServiceRef.IHalloweenService>, HalloweenNameServiceTester.HalloweenNameServiceRef.IHalloweenService {
        
        public HalloweenServiceClient() {
        }
        
        public HalloweenServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HalloweenServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HalloweenServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HalloweenServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public HalloweenNameServiceTester.HalloweenNameServiceRef.Name GetRandomName() {
            return base.Channel.GetRandomName();
        }
        
        public System.Threading.Tasks.Task<HalloweenNameServiceTester.HalloweenNameServiceRef.Name> GetRandomNameAsync() {
            return base.Channel.GetRandomNameAsync();
        }
        
        public HalloweenNameServiceTester.HalloweenNameServiceRef.Name[] GetRandomNames(int count) {
            return base.Channel.GetRandomNames(count);
        }
        
        public System.Threading.Tasks.Task<HalloweenNameServiceTester.HalloweenNameServiceRef.Name[]> GetRandomNamesAsync(int count) {
            return base.Channel.GetRandomNamesAsync(count);
        }
    }
}
